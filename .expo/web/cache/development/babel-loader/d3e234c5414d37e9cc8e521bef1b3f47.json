{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tersa\\\\Documents\\\\Projetos\\\\Magnet\\xF3metro\\\\App.js\";\nimport { Magnetometer } from 'expo-sensors';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { title } from \"react-native-web/dist/index\";\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport { loadAsync } from 'expo-font';\nexport default function Compass() {\n  useEffect(function () {\n    Font.loadAsync({\n      'Staatliches-Regular': require(\"./assets/fonts/Staatliches-Regular.ttf\")\n    });\n  }, []);\n\n  var _React$useState = React.useState({\n    x: 0,\n    y: 0,\n    z: 0\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _useState = useState(new Animated.ValueXY({\n    x: 0,\n    y: 95\n  })),\n      _useState2 = _slicedToArray(_useState, 1),\n      offset = _useState2[0];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      opacity = _useState4[0];\n\n  useEffect(function () {\n    Animated.parallel([Animated.spring(offset.y, {\n      useNativeDriver: true,\n      toValue: 0,\n      speed: 2,\n      bouciness: 30\n    }), Animated.timing(opacity, {\n      useNativeDriver: true,\n      toValue: 1,\n      duration: 200\n    })]).start();\n  }, []);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      subscription = _React$useState4[0],\n      setSubscription = _React$useState4[1];\n\n  React.useEffect(function () {\n    _toggle();\n\n    return function () {\n      _unsubscribe();\n    };\n  }, []);\n\n  var _toggle = function _toggle() {\n    if (subscription) {\n      _unsubscribe();\n    } else {\n      _subscribe();\n    }\n  };\n\n  var _slow = function _slow() {\n    Magnetometer.setUpdateInterval(1000);\n  };\n\n  var _fast = function _fast() {\n    Magnetometer.setUpdateInterval(16);\n  };\n\n  var _subscribe = function _subscribe() {\n    setSubscription(Magnetometer.addListener(function (result) {\n      setData(result);\n    }));\n  };\n\n  var _unsubscribe = function _unsubscribe() {\n    subscription && subscription.remove();\n    setSubscription(null);\n  };\n\n  var x = data.x,\n      y = data.y,\n      z = data.z;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.TextTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'Staatliches-Regular',\n      fontSize: 40,\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  }, \"Magnet\\xF4metro\")), React.createElement(Image, {\n    style: styles.Imagem,\n    source: require(\"./assets/Magneto.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }\n  }), React.createElement(Animated.View, {\n    style: [styles.sensor, {\n      opacity: opacity,\n      transform: [{\n        translateY: offset.y\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }\n  }, React.createElement(View, {\n    style: styles.TextTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.TextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"X: \", round(x), \"  Y: \", round(y), \"  Z: \", round(z))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: _toggle,\n    style: styles.buttonAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.TextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Alternar\")), React.createElement(TouchableOpacity, {\n    onPress: _slow,\n    style: [styles.button, styles.middleButton],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.TextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Devagar\")), React.createElement(TouchableOpacity, {\n    onPress: _fast,\n    style: styles.buttonRap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.TextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"R\\xE1pido\")))));\n}\n\nfunction round(n) {\n  if (!n) {\n    return 0;\n  }\n\n  return Math.floor(n * 100) / 100;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    marginTop: 10,\n    fontWeight: 'bold',\n    backgroundColor: '#595eaa',\n    marginBottom: 300\n  },\n  button: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderRadius: 0\n  },\n  buttonAlt: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderColor: '#fff',\n    borderLeftWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopLeftRadius: 50,\n    borderBottomLeftRadius: 50\n  },\n  buttonRap: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderRightWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#fff',\n    borderTopRightRadius: 50,\n    borderBottomRightRadius: 50\n  },\n  middleButton: {\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#fff',\n    fontWeight: 'bold'\n  },\n  sensor: {\n    paddingHorizontal: 10,\n    backgroundColor: '#595eaa'\n  },\n  Imagem: {\n    width: 370,\n    height: 500,\n    resizeMode: 'center',\n    borderRadius: 210\n  },\n  Text: {\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  TextButton: {\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  TextTitle: {\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#fff',\n    marginTop: 80\n  }\n});","map":{"version":3,"sources":["C:/Users/tersa/Documents/Projetos/Magnet√≥metro/App.js"],"names":["Magnetometer","React","useState","useEffect","title","AppLoading","Font","loadAsync","Compass","require","x","y","z","data","setData","Animated","ValueXY","offset","Value","opacity","parallel","spring","useNativeDriver","toValue","speed","bouciness","timing","duration","start","subscription","setSubscription","_toggle","_unsubscribe","_subscribe","_slow","setUpdateInterval","_fast","addListener","result","remove","styles","TextTitle","fontFamily","fontSize","color","Imagem","sensor","transform","translateY","TextButton","round","buttonContainer","buttonAlt","button","middleButton","buttonRap","n","Math","floor","StyleSheet","create","container","flex","flexDirection","alignItems","marginTop","fontWeight","backgroundColor","marginBottom","justifyContent","padding","borderRadius","borderColor","borderLeftWidth","borderTopWidth","borderBottomWidth","borderTopLeftRadius","borderBottomLeftRadius","borderRightWidth","borderTopRightRadius","borderBottomRightRadius","paddingHorizontal","width","height","resizeMode","Text","textAlign"],"mappings":"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","sourcesContent":["import { Magnetometer } from 'expo-sensors';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View,\n         Image, Animated, title } from 'react-native';\nimport {AppLoading} from 'expo'\nimport * as Font from 'expo-font'\nimport { loadAsync } from 'expo-font';\n\n\n/*const fetchFonts = () => {\n  return Font.loadAsync({\n  'Staatliches-Regular': require('./assets/fonts/Staatliches-Regular.ttf'),\n});\n};*/\n\nexport default function Compass() {\n\n  useEffect(() => {\n    Font.loadAsync({\n      'Staatliches-Regular':require('./assets/fonts/Staatliches-Regular.ttf')\n    })\n  },[])\n  \n  /*const[dataLoaded, setDataLoaded] = useState(false);\n\n  if(!dataLoaded){\n    return (\n      <AppLoading\n      startAsync={fetchFonts}\n      onFinish={() => setDataLoaded(true)}\n      />\n    );\n  }*/\n\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    z: 0,\n  });\n  const [offset] = useState(new Animated.ValueXY({x: 0, y: 95}));\n  const [opacity] = useState(new Animated.Value(0));\n  useEffect(()=> {\n    Animated.parallel([\n      Animated.spring(offset.y, {\n        useNativeDriver: true,\n        toValue: 0,\n        speed: 2,\n        bouciness: 30\n      }),\n      Animated.timing(opacity, {\n        useNativeDriver: true,\n        toValue: 1,\n        duration:200,\n      })\n    ]).start();\n  }, []);\n  \n  const [subscription, setSubscription] = React.useState(null);\n\n  React.useEffect(() => {\n    _toggle();\n    return () => {\n      _unsubscribe();\n    };\n  }, []);\n\n  const _toggle = () => {\n    if (subscription) {\n      _unsubscribe();\n    } else {\n      _subscribe();\n    }\n  };\n\n  const _slow = () => {\n    Magnetometer.setUpdateInterval(1000);\n  };\n\n  const _fast = () => {\n    Magnetometer.setUpdateInterval(16);\n  };\n\n  const _subscribe = () => {\n    setSubscription(\n      Magnetometer.addListener(result => {\n        setData(result);\n      })\n    );\n  };\n\n  const _unsubscribe = () => {\n    subscription && subscription.remove();\n    setSubscription(null);\n  };\n  \n  //style={styles.sensor}\n  const { x, y, z } = data;\n  return (\n    <View >\n       <View style={styles.TextTitle}>\n       \n       <Text style={{ fontFamily:'Staatliches-Regular', fontSize: 40, color:'#fff' }}>Magnet√¥metro</Text>\n       </View>\n       \n       <Image\n        style={styles.Imagem}\n        source={require('./assets/Magneto.png')} \n        />\n         <Animated.View \n      style={[\n        styles.sensor,\n      {\n        opacity: opacity,\n        transform: [\n          { translateY: offset.y }\n        ]\n      }\n    ]}\n      >\n      <View style={styles.TextTitle}>\n      {/*<Text style={styles.Text}>*/}\n      <Text style={styles.TextButton}> \n        X: {round(x)}  Y: {round(y)}  Z: {round(z)}\n      </Text>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={_toggle} style={styles.buttonAlt}>\n        <Text style={styles.TextButton}>Alternar</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={_slow} style={[styles.button, styles.middleButton]}>\n        <Text style={styles.TextButton}>Devagar</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={_fast} style={styles.buttonRap}>\n        <Text style={styles.TextButton}>R√°pido</Text>\n        </TouchableOpacity>\n      </View>\n      </Animated.View>\n      </View>\n  );\n}\n\nfunction round(n) {\n  if (!n) {\n    return 0;\n  }\n  return Math.floor(n * 100) / 100;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    marginTop: 10,\n    fontWeight: 'bold',\n    backgroundColor: '#595eaa',\n    marginBottom: 300\n  },\n  button: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderRadius: 0\n  },\n  buttonAlt: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderColor: '#fff',\n    borderLeftWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopLeftRadius: 50,\n    borderBottomLeftRadius: 50,\n  },\n  buttonRap: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#595eaa',\n    padding: 10,\n    fontWeight: 'bold',\n    borderRightWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#fff',\n    borderTopRightRadius: 50,\n    borderBottomRightRadius: 50,\n  },\n  middleButton: {\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#fff',\n    fontWeight: 'bold',\n  },\n  sensor: {\n    paddingHorizontal: 10,\n    backgroundColor: '#595eaa',\n  },\n  Imagem: {\n    width: 370,\n    height: 500,\n    resizeMode: 'center',\n    borderRadius: 210,\n  },\n  Text:{\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  TextButton:{\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  TextTitle:{\n    textAlign: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#fff',\n    marginTop: 80\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}